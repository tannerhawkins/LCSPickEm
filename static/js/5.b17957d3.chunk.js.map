{"version":3,"sources":["images/lcs-logo.png","components/Authentication/SignInOutButton.js","components/Authentication/Header.js","pages/LogIn/SignUp.js"],"names":["StyledSignInButton","styled","StyledButton","SignInOutButton","className","history","useHistory","dispatch","useDispatch","loginState","useSelector","selectIsSignedIn","onClick","push","auth","signOut","then","clearState","StyledHeader","header","Constants","COLOR","BLACK","HEADER_HEIGHT","HeaderName","div","StyledLogo","img","StyledLogoContainer","Navigation","id","src","Logo","MainContainer","StyledButtonContainer","StyledNamesContainer","StyledTitle","StyledForm","form","StyledInput","input","StyledNameInput","StyledSignUpButton","p","StyledSubmitButton","Button","StyledError","SignUp","errorMessage","setErrorMessage","useState","title","description","type","placeholder","name","required","data","Object","values","document","forms","signUpForm","reduce","obj","field","checked","value","undefined","password","passwordConfirm","createUserWithEmailAndPassword","email","currentUser","updateProfile","displayName","username","accountInfo","uid","picks","signIn","setPasswordLength","length","gameDataDb","get","result","setWeek","docs","userDataDb","doc","set","catch","response","message"],"mappings":"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","file":"static/js/5.b17957d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lcs-logo.dbbe227a.png\";","import React from \"react\";\nimport { auth } from \"../../data/firebase.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StyledButton from \"../Template/Button.js\";\nimport { Constants } from \"../../data/constants.js\";\nimport styled from \"styled-components\";\nimport { selectIsSignedIn } from \"../../app/account/selectors.js\";\nimport { clearState } from \"../../app/store.js\";\nimport { useHistory } from \"react-router\";\n\nconst SignInOutButton = ({ className }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const loginState = useSelector(selectIsSignedIn);\n\n  const logout = () => {\n    auth.signOut().then(() => {\n      dispatch(clearState());\n    });\n  };\n\n  return (\n    <div className={className} data-test=\"login-logout\">\n      {!loginState && (\n        <StyledSignInButton onClick={() => history.push(\"/signin\")}>\n          SIGN-IN\n        </StyledSignInButton>\n      )}\n      {loginState && (\n        <StyledSignInButton onClick={logout}>LOGOUT</StyledSignInButton>\n      )}\n    </div>\n  );\n};\n\nconst StyledSignInButton = styled(StyledButton)`\n  width: 120px;\n  height: 40px;\n  margin-left: 10px;\n  color: black;\n  @media (max-width: 800px) {\n    width: 60px;\n    height: 30px;\n    font-size: 10px;\n  }\n`;\n\nexport default SignInOutButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Constants } from \"../../data/constants\";\nimport Logo from \"../../images/lcs-logo.png\";\nimport SignInOutButton from \"../Authentication/SignInOutButton\";\nimport { useHistory } from \"react-router\";\n\nconst Navigation = () => {\n  const history = useHistory();\n\n  return (\n    <StyledHeader id=\"header\">\n      <StyledLogoContainer onClick={() => history.push(`/home`)}>\n        <StyledLogo src={Logo} />\n        <HeaderName>LCS Pick'Em</HeaderName>\n      </StyledLogoContainer>\n    </StyledHeader>\n  );\n};\n\nconst StyledHeader = styled.header`\n  display: flex;\n  background-color: ${Constants.COLOR.BLACK};\n  justify-content: space-between;\n  align-items: center;\n  height: ${Constants.HEADER_HEIGHT};\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  z-index: 100000;\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 3%;\n`;\n\nconst HeaderName = styled.div`\n  color: white;\n  white-space: nowrap;\n  margin-left: 30px;\n  font-size: 30px;\n  font-weight: bold;\n  text-shadow: 0px 2px 2px rgba(0, 0, 0, 0.25);\n  @media (max-width: 800px) {\n    display: none;\n  }\n`;\n\nconst StyledLogo = styled.img`\n  margin-left: 3%;\n  width: 100px;\n  height: 70px;\n`;\n\nconst StyledLogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 3%;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledSignInOutButton = styled(SignInOutButton)``;\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport Main from \"../../layouts/Main\";\nimport styled from \"styled-components\";\nimport Header from \"../../components/Authentication/Header\";\nimport { Constants } from \"../../data/constants\";\nimport Button from \"../../components/Template/Button\";\nimport { auth, gameDataDb, userDataDb } from \"../../data/firebase\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setPasswordLength,\n  setWeek,\n  signIn,\n} from \"../../app/account/actions.js\";\nimport { useHistory } from \"react-router\";\n\nconst SignUp = () => {\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState();\n  const dispatch = useDispatch();\n\n  const handleSubmit = () => {\n    setErrorMessage();\n\n    // get sign up form data\n    const data = Object.values(document.forms.signUpForm).reduce(\n      (obj, field) => {\n        if (field.type === \"radio\") {\n          if (field.checked) {\n            obj[field.name] = field.value;\n          } else {\n            if (obj[field.name] === undefined) {\n              obj[field.name] = \"\";\n            }\n          }\n        } else {\n          obj[field.name] = field.value;\n        }\n        return obj;\n      },\n      {}\n    );\n    // checks all fields are filled out\n    for (var value in data) {\n      if (data[value] === \"\") {\n        setErrorMessage(\"Please fill out all fields\");\n        return;\n      }\n    }\n    // checks password and password confirm match\n    if (data.password !== data.passwordConfirm) {\n      setErrorMessage(\"Passwords must match\");\n      return;\n    }\n    // sends request to create account\n    auth\n      .createUserWithEmailAndPassword(data.email, data.password)\n      .then(() => {\n        // updates account with user display name\n        auth.currentUser\n          .updateProfile({\n            displayName: `${data.username}`,\n          })\n          .then(() => {\n            const accountInfo = {\n              email: auth.currentUser.email,\n              uid: auth.currentUser.uid,\n              displayName: `${data.username}`,\n              picks: [],\n            };\n            dispatch(signIn(accountInfo));\n            dispatch(setPasswordLength(data.password.length));\n            gameDataDb\n              .get()\n              .then((result) => {\n                dispatch(setWeek(result.docs[0].data()));\n              })\n              .then(\n                userDataDb.doc(auth.currentUser.uid).set(accountInfo),\n                history.push(`/home`)\n              );\n          });\n      })\n      .catch((response) => {\n        // sets error message if something goes wrong\n        setErrorMessage(response.message);\n      });\n  };\n\n  return (\n    <Main title={\"Sign-Up\"} description={\"Sign-Up\"}>\n      <Header />\n      <MainContainer>\n        <StyledTitle>Sign-up</StyledTitle>\n        <StyledForm id=\"signUpForm\">\n          <StyledNamesContainer>\n            <StyledNameInput\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n              data-test=\"username\"\n              required\n            />\n          </StyledNamesContainer>\n          <StyledInput\n            type=\"email\"\n            data-test=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            required\n          />\n          <StyledInput\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            data-test=\"password\"\n            required\n          />\n          <StyledInput\n            type=\"password\"\n            placeholder=\"Confirm Pasword\"\n            name=\"passwordConfirm\"\n            data-test=\"confirm-password\"\n            required\n          />\n          <StyledError>{errorMessage}</StyledError>\n          <StyledButtonContainer>\n            <StyledSubmitButton data-test=\"submit\" onClick={handleSubmit}>\n              SIGN-UP\n            </StyledSubmitButton>\n            <StyledSignUpButton\n              data-test=\"sign-up\"\n              onClick={() => history.push(`signin`)}\n            >\n              Already have an account? Sign in here\n            </StyledSignUpButton>\n          </StyledButtonContainer>\n        </StyledForm>\n      </MainContainer>\n    </Main>\n  );\n};\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding-top: calc(${Constants.HEADER_HEIGHT} + 40px);\n`;\n\nconst StyledButtonContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledNamesContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledTitle = styled.header`\n  font-weight: bold;\n  font-size: 64px;\n  margin-bottom: 20px;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  outline: none;\n  width: 90%;\n  max-width: 600px;\n`;\n\nconst StyledInput = styled.input`\n  border: none;\n  border-bottom: 1px solid black;\n  height: 60px;\n  margin-bottom: 70px;\n  font-size: 30px;\n  outline: none;\n`;\n\nconst StyledNameInput = styled(StyledInput)`\n  width: 100%;\n`;\n\nconst StyledSignUpButton = styled.p`\n  text-align: right;\n  font-size: 18px;\n  width: 55%;\n  margin-bottom: 30px;\n  color: red;\n\n  &:hover {\n    cursor: pointer;\n    color: #ff8585;\n  }\n`;\n\nconst StyledSubmitButton = styled(Button)`\n  font-size: 25px;\n  height: 70px;\n  width: 20%;\n  min-width: 100px;\n  color: white;\n  background-color: ${Constants.COLOR.BLACK};\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledError = styled.p`\n  color: red;\n  margin-top: -20px;\n`;\n\nexport default SignUp;\n"],"sourceRoot":""}